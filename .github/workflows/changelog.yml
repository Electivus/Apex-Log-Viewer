name: changelog

on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch to target (defaults to repository default)'
        required: false
      version:
        description: 'Version to document (defaults to latest tag when omitted)'
        required: false
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    name: Generate changelog
    runs-on: ubuntu-latest
    if: github.event_name != 'release' || github.event.release.prerelease == false
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: 20.17.0
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Determine version
        id: version
        shell: bash
        env:
          INPUT_VERSION: ${{ github.event.inputs.version || '' }}
          RELEASE_TAG: ${{ github.event.release.tag_name || '' }}
        run: |
          set -euo pipefail
          RAW="$INPUT_VERSION"
          if [[ -z "$RAW" && "$GITHUB_EVENT_NAME" == "release" ]]; then
            RAW="$RELEASE_TAG"
          fi
          if [[ -z "$RAW" ]]; then
            RAW=$(git tag --list 'v*' --sort=-v:refname | head -n1 || true)
          fi
          RAW="${RAW#v}"
          if [[ -z "$RAW" ]]; then
            echo "Unable to determine version for changelog generation" >&2
            exit 1
          fi
          echo "Using version $RAW"
          echo "version=$RAW" >> "$GITHUB_OUTPUT"

      - name: Apply target version
        run: npm run version:set -- "${{ steps.version.outputs.version }}"

      - name: Generate changelog
        run: npm run changelog:generate

      - name: Restore development version
        run: npm run version:set -- 0.0.0

      - name: Detect changelog diff
        id: diff
        run: |
          if git diff --quiet -- CHANGELOG.md; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create pull request
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: update changelog [skip ci]'
          branch: automation/update-changelog
          delete-branch: true
          title: 'docs: update changelog'
          body: |
            Automated changelog refresh generated by `${{ github.workflow }}`.

            - Event: `${{ github.event_name }}`
            - Actor: `${{ github.actor }}`
          labels: documentation
          base: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.base_branch || github.event.release.target_commitish || github.ref_name }}
          add-paths: |
            CHANGELOG.md

      - name: No changes detected
        if: steps.diff.outputs.changed != 'true'
        run: echo "Changelog already up to date; skipping PR."
